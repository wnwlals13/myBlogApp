{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.returnFirstArg = exports.canTextBeChildOfNode = exports.ELEMENTS_WITH_NO_TEXT_CHILDREN = exports.PRESERVE_CUSTOM_ATTRIBUTES = exports.setStyleProp = exports.isCustomComponent = void 0;\nvar react_1 = require(\"react\");\nvar style_to_js_1 = __importDefault(require(\"style-to-js\"));\nvar RESERVED_SVG_MATHML_ELEMENTS = new Set(['annotation-xml', 'color-profile', 'font-face', 'font-face-src', 'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph']);\n/**\n * Check if a tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param tagName - Tag name.\n * @param props - Props passed to the element.\n * @returns - Whether the tag is custom component.\n */\nfunction isCustomComponent(tagName, props) {\n  if (!tagName.includes('-')) {\n    return Boolean(props && typeof props.is === 'string');\n  }\n  // These are reserved SVG and MathML elements.\n  // We don't mind this whitelist too much because we expect it to never grow.\n  // The alternative is to track the namespace in a few places which is convoluted.\n  // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n  if (RESERVED_SVG_MATHML_ELEMENTS.has(tagName)) {\n    return false;\n  }\n  return true;\n}\nexports.isCustomComponent = isCustomComponent;\nvar styleOptions = {\n  reactCompat: true\n};\n/**\n * Sets style prop.\n *\n * @param style - Inline style.\n * @param props - Props object.\n */\nfunction setStyleProp(style, props) {\n  if (typeof style !== 'string') {\n    return;\n  }\n  if (!style.trim()) {\n    props.style = {};\n    return;\n  }\n  try {\n    props.style = (0, style_to_js_1.default)(style, styleOptions);\n  } catch (error) {\n    props.style = {};\n  }\n}\nexports.setStyleProp = setStyleProp;\n/**\n * @see https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html\n */\nexports.PRESERVE_CUSTOM_ATTRIBUTES = Number(react_1.version.split('.')[0]) >= 16;\n/**\n * @see https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\n */\nexports.ELEMENTS_WITH_NO_TEXT_CHILDREN = new Set(['tr', 'tbody', 'thead', 'tfoot', 'colgroup', 'table', 'head', 'html', 'frameset']);\n/**\n * Checks if the given node can contain text nodes\n *\n * @param node - Element node.\n * @returns - Whether the node can contain text nodes.\n */\nvar canTextBeChildOfNode = function (node) {\n  return !exports.ELEMENTS_WITH_NO_TEXT_CHILDREN.has(node.name);\n};\nexports.canTextBeChildOfNode = canTextBeChildOfNode;\n/**\n * Returns the first argument as is.\n *\n * @param arg - The argument to be returned.\n * @returns - The input argument `arg`.\n */\nvar returnFirstArg = function (arg) {\n  return arg;\n};\nexports.returnFirstArg = returnFirstArg;","map":{"version":3,"names":["react_1","require","style_to_js_1","__importDefault","RESERVED_SVG_MATHML_ELEMENTS","Set","isCustomComponent","tagName","props","includes","Boolean","is","has","exports","styleOptions","reactCompat","setStyleProp","style","trim","default","error","PRESERVE_CUSTOM_ATTRIBUTES","Number","version","split","ELEMENTS_WITH_NO_TEXT_CHILDREN","canTextBeChildOfNode","node","name","returnFirstArg","arg"],"sources":["/Users/joojimin/Desktop/jimin/project/blogApp/node_modules/html-react-parser/src/utilities.ts"],"sourcesContent":["import { version } from 'react';\nimport StyleToJS from 'style-to-js';\nimport type { Element } from 'html-dom-parser';\n\nimport type { Props } from './attributes-to-props';\n\nconst RESERVED_SVG_MATHML_ELEMENTS = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n] as const);\n\ntype ReservedSvgMathmlElements =\n  typeof RESERVED_SVG_MATHML_ELEMENTS extends Set<infer T> ? T : never;\n\n/**\n * Check if a tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param tagName - Tag name.\n * @param props - Props passed to the element.\n * @returns - Whether the tag is custom component.\n */\nexport function isCustomComponent(\n  tagName: string,\n  props?: Record<PropertyKey, string>,\n): boolean {\n  if (!tagName.includes('-')) {\n    return Boolean(props && typeof props.is === 'string');\n  }\n\n  // These are reserved SVG and MathML elements.\n  // We don't mind this whitelist too much because we expect it to never grow.\n  // The alternative is to track the namespace in a few places which is convoluted.\n  // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n  if (RESERVED_SVG_MATHML_ELEMENTS.has(tagName as ReservedSvgMathmlElements)) {\n    return false;\n  }\n\n  return true;\n}\n\nconst styleOptions = {\n  reactCompat: true,\n} as const;\n\n/**\n * Sets style prop.\n *\n * @param style - Inline style.\n * @param props - Props object.\n */\nexport function setStyleProp(style: string, props: Props): void {\n  if (typeof style !== 'string') {\n    return;\n  }\n\n  if (!style.trim()) {\n    props.style = {};\n    return;\n  }\n\n  try {\n    props.style = StyleToJS(style, styleOptions);\n  } catch (error) {\n    props.style = {};\n  }\n}\n\n/**\n * @see https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html\n */\nexport const PRESERVE_CUSTOM_ATTRIBUTES = Number(version.split('.')[0]) >= 16;\n\n/**\n * @see https://github.com/facebook/react/blob/cae635054e17a6f107a39d328649137b83f25972/packages/react-dom/src/client/validateDOMNesting.js#L213\n */\nexport const ELEMENTS_WITH_NO_TEXT_CHILDREN = new Set([\n  'tr',\n  'tbody',\n  'thead',\n  'tfoot',\n  'colgroup',\n  'table',\n  'head',\n  'html',\n  'frameset',\n] as const);\n\ntype ElementsWithNoTextChildren =\n  typeof ELEMENTS_WITH_NO_TEXT_CHILDREN extends Set<infer T> ? T : never;\n\n/**\n * Checks if the given node can contain text nodes\n *\n * @param node - Element node.\n * @returns - Whether the node can contain text nodes.\n */\nexport const canTextBeChildOfNode = (node: Element) =>\n  !ELEMENTS_WITH_NO_TEXT_CHILDREN.has(node.name as ElementsWithNoTextChildren);\n\n/**\n * Returns the first argument as is.\n *\n * @param arg - The argument to be returned.\n * @returns - The input argument `arg`.\n */\nexport const returnFirstArg = (arg: any) => arg;\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,eAAA,CAAAF,OAAA;AAKA,IAAMG,4BAA4B,GAAG,IAAIC,GAAG,CAAC,CAC3C,gBAAgB,EAChB,eAAe,EACf,WAAW,EACX,eAAe,EACf,eAAe,EACf,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,CACP,CAAC;AAKX;;;;;;;;;AASA,SAAgBC,iBAAiBA,CAC/BC,OAAe,EACfC,KAAmC;EAEnC,IAAI,CAACD,OAAO,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1B,OAAOC,OAAO,CAACF,KAAK,IAAI,OAAOA,KAAK,CAACG,EAAE,KAAK,QAAQ,CAAC;EACvD;EAEA;EACA;EACA;EACA;EACA,IAAIP,4BAA4B,CAACQ,GAAG,CAACL,OAAoC,CAAC,EAAE;IAC1E,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAjBAM,OAAA,CAAAP,iBAAA,GAAAA,iBAAA;AAmBA,IAAMQ,YAAY,GAAG;EACnBC,WAAW,EAAE;CACL;AAEV;;;;;;AAMA,SAAgBC,YAAYA,CAACC,KAAa,EAAET,KAAY;EACtD,IAAI,OAAOS,KAAK,KAAK,QAAQ,EAAE;IAC7B;EACF;EAEA,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE,EAAE;IACjBV,KAAK,CAACS,KAAK,GAAG,EAAE;IAChB;EACF;EAEA,IAAI;IACFT,KAAK,CAACS,KAAK,GAAG,IAAAf,aAAA,CAAAiB,OAAS,EAACF,KAAK,EAAEH,YAAY,CAAC;EAC9C,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdZ,KAAK,CAACS,KAAK,GAAG,EAAE;EAClB;AACF;AAfAJ,OAAA,CAAAG,YAAA,GAAAA,YAAA;AAiBA;;;AAGaH,OAAA,CAAAQ,0BAA0B,GAAGC,MAAM,CAACtB,OAAA,CAAAuB,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAE7E;;;AAGaX,OAAA,CAAAY,8BAA8B,GAAG,IAAIpB,GAAG,CAAC,CACpD,IAAI,EACJ,OAAO,EACP,OAAO,EACP,OAAO,EACP,UAAU,EACV,OAAO,EACP,MAAM,EACN,MAAM,EACN,UAAU,CACF,CAAC;AAKX;;;;;;AAMO,IAAMqB,oBAAoB,GAAG,SAAAA,CAACC,IAAa;EAChD,QAACd,OAAA,CAAAY,8BAA8B,CAACb,GAAG,CAACe,IAAI,CAACC,IAAkC,CAAC;AAA5E,CAA4E;AADjEf,OAAA,CAAAa,oBAAoB,GAAAA,oBAAA;AAGjC;;;;;;AAMO,IAAMG,cAAc,GAAG,SAAAA,CAACC,GAAQ;EAAK,OAAAA,GAAG;AAAH,CAAG;AAAlCjB,OAAA,CAAAgB,cAAc,GAAAA,cAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}